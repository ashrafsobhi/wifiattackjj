{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport {\n  convertHandshake,\n  type HandshakeConversionInput,\n  type HandshakeConversionOutput,\n} from \"@/ai/flows/handshake-conversion\";\n\n\nexport async function runHandshakeConversionAction(\n  input: HandshakeConversionInput\n): Promise<HandshakeConversionOutput> {\n  try {\n    const result = await convertHandshake(input);\n    return result;\n  } catch (error) {\n    console.error(\"Error in handshake conversion:\", error);\n    throw new Error(\"Failed to run handshake conversion.\");\n  }\n}\n\nexport async function sendTelegramMessageAction(\n  name: string,\n  phone: string\n): Promise<{ success: boolean; message: string }> {\n  const botToken = process.env.TELEGRAM_BOT_TOKEN;\n  const chatId = process.env.TELEGRAM_CHAT_ID;\n\n  if (!botToken || !chatId) {\n    console.error(\"Telegram Bot Token or Chat ID is not configured.\");\n    return {\n      success: false,\n      message: \"فشل الإرسال، إعدادات البوت غير مكتملة.\",\n    };\n  }\n  \n  const text = `\nمتدرب جديد بدأ المحاكاة:\nالاسم: ${name}\nرقم الهاتف: ${phone}\n`;\n\n  const url = `https://api.telegram.org/bot${botToken}/sendMessage`;\n\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        chat_id: chatId,\n        text: text,\n      }),\n    });\n\n    const data = await response.json();\n\n    if (data.ok) {\n      return { success: true, message: \"تم إرسال البيانات بنجاح.\" };\n    } else {\n      console.error(\"Telegram API error:\", data);\n      return {\n        success: false,\n        message: \"فشل إرسال البيانات إلى تليجرام.\",\n      };\n    }\n  } catch (error) {\n    console.error(\"Error sending to Telegram:\", error);\n    return { success: false, message: \"حدث خطأ أثناء الاتصال بتليجرام.\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAsBsB,4BAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/app-header.tsx"],"sourcesContent":["export function AppHeader() {\n  return (\n    <header className=\"border-b border-white/10 bg-background/80 py-4 backdrop-blur-sm\">\n      <div className=\"container mx-auto px-4 md:px-6\" dir=\"rtl\">\n        <h1 className=\"font-headline text-2xl font-bold text-primary md:text-3xl\">\n          محاكي اختراق الشبكات اللاسلكية\n        </h1>\n        <p className=\"mt-1 text-sm text-muted-foreground\">\n          محاكاة تفاعلية لخطوات اختبار اختراق شبكات الواي فاي.\n        </p>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAO,SAAS;IACd,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;YAAiC,KAAI;;8BAClD,8OAAC;oBAAG,WAAU;8BAA4D;;;;;;8BAG1E,8OAAC;oBAAE,WAAU;8BAAqC;;;;;;;;;;;;;;;;;AAM1D","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/simulation/step-card.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { CheckCircle, Circle, Loader2, type LucideIcon, Terminal } from \"lucide-react\";\nimport { Input } from \"../ui/input\";\n\nexport type Status = \"pending\" | \"active\" | \"completed\";\n\ninterface StepProps {\n  stepNumber: number;\n  title: string;\n  command?: string;\n  status: Status;\n  Icon: LucideIcon;\n  children: React.ReactNode;\n  onCommandSubmit?: (command: string) => void;\n  isButtonLoading?: boolean;\n}\n\nconst statusConfig = {\n  pending: {\n    Icon: Circle,\n    borderColor: \"border-muted/20\",\n    textColor: \"text-muted-foreground/50\",\n    bgColor: \"bg-card/30 backdrop-blur-sm\",\n    contentVisibility: \"hidden\",\n  },\n  active: {\n    Icon: Loader2,\n    borderColor: \"border-primary/50\",\n    textColor: \"text-primary\",\n    bgColor: \"bg-card\",\n    contentVisibility: \"visible\",\n  },\n  completed: {\n    Icon: CheckCircle,\n    borderColor: \"border-green-500/30\",\n    textColor: \"text-green-500\",\n    bgColor: \"bg-card/80\",\n    contentVisibility: \"visible\",\n  },\n};\n\nexport function StepCard({\n  stepNumber,\n  title,\n  command,\n  status,\n  Icon,\n  children,\n  onCommandSubmit,\n  isButtonLoading = false,\n}: StepProps) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const config = statusConfig[status];\n  const StatusIcon = status === 'active' ? config.Icon : config.Icon;\n\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (onCommandSubmit) {\n      onCommandSubmit(inputValue);\n    }\n  };\n\n  const isCrackingStep = stepNumber === 7;\n\n  return (\n    <div className=\"relative\">\n      <div\n        className={cn(\n          \"absolute -inset-px rounded-lg border-2\",\n          config.borderColor,\n          status === 'active' && 'animate-pulse'\n        )}\n        aria-hidden=\"true\"\n      ></div>\n      <Card\n        className={cn(\n          \"transition-all duration-500\",\n          config.bgColor,\n          status === \"pending\" && \"blur-[1px] saturate-0\"\n        )}\n      >\n        <CardHeader className=\"flex flex-row items-start md:items-center gap-4\">\n          <div className=\"flex h-10 w-10 items-center justify-center rounded-full bg-secondary shrink-0 mt-1 md:mt-0\">\n            <Icon\n              className={cn(\"h-6 w-6\", config.textColor)}\n              aria-hidden=\"true\"\n            />\n          </div>\n          <div className=\"flex-1\">\n            <CardTitle className=\"font-headline text-lg md:text-xl\">\n              <span className=\"text-muted-foreground/50 ml-2\">{stepNumber}.</span>\n              {title}\n            </CardTitle>\n            {command && (\n              <CardDescription className=\"font-code mt-1 text-xs text-left break-all\" dir=\"ltr\">\n                {command}\n              </CardDescription>\n            )}\n          </div>\n          <StatusIcon\n            className={cn(\"h-6 w-6 shrink-0\", config.textColor, status === 'active' && isButtonLoading && \"animate-spin\")}\n          />\n        </CardHeader>\n        {status !== \"pending\" && (\n          <CardContent>\n            <div className=\"space-y-4\">{children}</div>\n            {onCommandSubmit && status === \"active\" && (\n              <form onSubmit={handleSubmit} className=\"mt-6 border-t pt-4\">\n                <div className=\"relative\">\n                  <Terminal className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n                  <Input\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    placeholder=\"اكتب الأمر هنا واضغط Enter\"\n                    className=\"font-code pl-10\"\n                    autoComplete=\"off\"\n                    disabled={isButtonLoading}\n                  />\n                </div>\n                {isCrackingStep && (\n                  <Button type=\"submit\" disabled={isButtonLoading} className=\"mt-2 w-full\">\n                    {isButtonLoading ? \"جاري الاختراق...\" : \"ابدأ الاختراق\"}\n                  </Button>\n                )}\n              </form>\n            )}\n          </CardContent>\n        )}\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;AAeA,MAAM,eAAe;IACnB,SAAS;QACP,MAAM,sMAAA,CAAA,SAAM;QACZ,aAAa;QACb,WAAW;QACX,SAAS;QACT,mBAAmB;IACrB;IACA,QAAQ;QACN,MAAM,iNAAA,CAAA,UAAO;QACb,aAAa;QACb,WAAW;QACX,SAAS;QACT,mBAAmB;IACrB;IACA,WAAW;QACT,MAAM,2NAAA,CAAA,cAAW;QACjB,aAAa;QACb,WAAW;QACX,SAAS;QACT,mBAAmB;IACrB;AACF;AAEO,SAAS,SAAS,EACvB,UAAU,EACV,KAAK,EACL,OAAO,EACP,MAAM,EACN,IAAI,EACJ,QAAQ,EACR,eAAe,EACf,kBAAkB,KAAK,EACb;IACV,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,SAAS,YAAY,CAAC,OAAO;IACnC,MAAM,aAAa,WAAW,WAAW,OAAO,IAAI,GAAG,OAAO,IAAI;IAGlE,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,iBAAiB;YACnB,gBAAgB;QAClB;IACF;IAEA,MAAM,iBAAiB,eAAe;IAEtC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0CACA,OAAO,WAAW,EAClB,WAAW,YAAY;gBAEzB,eAAY;;;;;;0BAEd,8OAAC,gIAAA,CAAA,OAAI;gBACH,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+BACA,OAAO,OAAO,EACd,WAAW,aAAa;;kCAG1B,8OAAC,gIAAA,CAAA,aAAU;wBAAC,WAAU;;0CACpB,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW,OAAO,SAAS;oCACzC,eAAY;;;;;;;;;;;0CAGhB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,gIAAA,CAAA,YAAS;wCAAC,WAAU;;0DACnB,8OAAC;gDAAK,WAAU;;oDAAiC;oDAAW;;;;;;;4CAC3D;;;;;;;oCAEF,yBACC,8OAAC,gIAAA,CAAA,kBAAe;wCAAC,WAAU;wCAA6C,KAAI;kDACzE;;;;;;;;;;;;0CAIP,8OAAC;gCACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,oBAAoB,OAAO,SAAS,EAAE,WAAW,YAAY,mBAAmB;;;;;;;;;;;;oBAGjG,WAAW,2BACV,8OAAC,gIAAA,CAAA,cAAW;;0CACV,8OAAC;gCAAI,WAAU;0CAAa;;;;;;4BAC3B,mBAAmB,WAAW,0BAC7B,8OAAC;gCAAK,UAAU;gCAAc,WAAU;;kDACtC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,0MAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;0DACpB,8OAAC,iIAAA,CAAA,QAAK;gDACJ,OAAO;gDACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;gDAC7C,aAAY;gDACZ,WAAU;gDACV,cAAa;gDACb,UAAU;;;;;;;;;;;;oCAGb,gCACC,8OAAC,kIAAA,CAAA,SAAM;wCAAC,MAAK;wCAAS,UAAU;wCAAiB,WAAU;kDACxD,kBAAkB,qBAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU5D","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/simulation/terminal-output.tsx"],"sourcesContent":["import { Card } from \"@/components/ui/card\";\nimport { cn } from \"@/lib/utils\";\n\ninterface TerminalOutputProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport function TerminalOutput({ children, className }: TerminalOutputProps) {\n  return (\n    <div\n      className={cn(\n        \"rounded-lg bg-black/70 p-4 font-code text-sm text-white/90 shadow-inner\",\n        className\n      )}\n    >\n      <pre className=\"whitespace-pre-wrap\">{children}</pre>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAOO,SAAS,eAAe,EAAE,QAAQ,EAAE,SAAS,EAAuB;IACzE,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2EACA;kBAGF,cAAA,8OAAC;YAAI,WAAU;sBAAuB;;;;;;;;;;;AAG5C","debugId":null}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 597, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 629, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport {\n  Wifi,\n  Scan,\n  Monitor,\n  Hand,\n  Binary,\n  KeyRound,\n  User,\n  Phone,\n  Loader2,\n  Signal,\n  XCircle\n} from \"lucide-react\";\n\nimport {\n  sendTelegramMessageAction\n} from \"@/app/actions\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { AppHeader } from \"@/components/layout/app-header\";\nimport { StepCard, type Status } from \"@/components/simulation/step-card\";\nimport { TerminalOutput } from \"@/components/simulation/terminal-output\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Input } from \"@/components/ui/input\";\nimport type { HandshakeConversionOutput } from \"@/ai/flows/handshake-conversion\";\nimport { cn } from \"@/lib/utils\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Label } from \"@/components/ui/label\";\n\ntype Network = {\n  bssid: string;\n  pwr: number;\n  beacons: number;\n  data: number;\n  s: number;\n  ch: number;\n  mb: string;\n  enc: string;\n  cipher: string;\n  auth: string;\n  essid: string;\n};\n\nconst initialNetworks: Network[] = [\n  {\n    bssid: \"FE:B5:D5:59:1E:5F\",\n    pwr: -55,\n    beacons: 31,\n    data: 0,\n    s: 0,\n    ch: 1,\n    mb: \"180\",\n    enc: \"WPA2\",\n    cipher: \"CCMP\",\n    auth: \"PSK\",\n    essid: \"nemo\",\n  },\n  {\n    bssid: \"00:1A:C1:23:45:67\",\n    pwr: -62,\n    beacons: 15,\n    data: 0,\n    s: 0,\n    ch: 6,\n    mb: \"54\",\n    enc: \"WPA2\",\n    cipher: \"TKIP\",\n    auth: \"PSK\",\n    essid: \"Linksys-XYZ\",\n  },\n  {\n    bssid: \"DA:3B:9E:C4:F1:8A\",\n    pwr: -71,\n    beacons: 12,\n    data: 0,\n    s: 0,\n    ch: 11,\n    mb: \"130\",\n    enc: \"WPA2\",\n    cipher: \"CCMP\",\n    auth: \"PSK\",\n    essid: \"MyHomeWiFi\",\n  },\n];\n\nconst targetHash = \"f6085bce4b9ccef6bf1fe616f3bcf38c:feb5d5591e5f:320ab2f2814e:nemo:24042012\";\nconst correctPassword = \"24042012\";\n\nfunction RegistrationForm({ onRegister }: { onRegister: () => void }) {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!name || !phone) {\n      toast({\n        variant: \"destructive\",\n        title: \"بيانات ناقصة\",\n        description: \"من فضلك أدخل الاسم ورقم الهاتف.\",\n      });\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const result = await sendTelegramMessageAction(name, phone);\n      if (result.success) {\n        toast({\n          title: \"تم التسجيل\",\n          description: \"بياناتك اتبعتت بنجاح. هنبدأ المحاكاة دلوقتي.\",\n        });\n        onRegister();\n      } else {\n        throw new Error(result.message);\n      }\n    } catch (error: any) {\n      toast({\n        variant: \"destructive\",\n        title: \"خطأ في التسجيل\",\n        description: error.message || \"فشلت عملية إرسال البيانات. حاول مرة أخرى.\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex justify-center items-center py-12\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl\">تسجيل بيانات المتدرب</CardTitle>\n          <CardDescription>\n            من فضلك أدخل بياناتك لبدء محاكاة اختراق الشبكات.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"name\">الاسم</Label>\n              <div className=\"relative\">\n                 <User className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n                <Input\n                  id=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  placeholder=\"اكتب اسمك هنا\"\n                  className=\"pl-10\"\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"phone\">رقم الهاتف</Label>\n               <div className=\"relative\">\n                 <Phone className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n                <Input\n                  id=\"phone\"\n                  type=\"tel\"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                  placeholder=\"اكتب رقم تليفونك\"\n                  className=\"pl-10\"\n                  required\n                />\n              </div>\n            </div>\n            <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"ml-2 h-4 w-4 animate-spin\" />\n                  جاري الإرسال...\n                </>\n              ) : (\n                \"ابدأ المحاكاة\"\n              )}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default function Home() {\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [step, setStep] = useState(1);\n  const [targetNetwork, setTargetNetwork] = useState<Network | null>(null);\n  const [isHandshakeCaptured, setIsHandshakeCaptured] = useState(false);\n  const [handshakeConversionResult, setHandshakeConversionResult] =\n    useState<HandshakeConversionOutput | null>(null);\n  const [connectionPassword, setConnectionPassword] = useState(\"\");\n  const [connectionStatus, setConnectionStatus] =\n    useState<\"pending\" | \"success\" | \"failed\">(\"pending\");\n  const [currentCommand, setCurrentCommand] = useState(\"\");\n\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const getStatus = (currentStep: number): Status => {\n    if (step < currentStep) return \"pending\";\n    if (step === currentStep) return \"active\";\n    return \"completed\";\n  };\n  \n  const handleCommandSubmit = (command: string, expectedCommand: string, nextStep: number) => {\n    if (command.trim() === expectedCommand.trim()) {\n      setStep(nextStep);\n      setCurrentCommand(\"\");\n    } else {\n      toast({\n        variant: \"destructive\",\n        title: \"أمر خاطئ\",\n        description: \"الأمر اللي كتبته مش صح، حاول تاني.\",\n      });\n    }\n  };\n\n  const handleRunConversion = () => {\n    setIsLoading(true);\n    // Simulate the conversion process without AI\n    setTimeout(() => {\n      setHandshakeConversionResult({\n        hashcatFormat: targetHash,\n        conversionDetails: \"summarizing packets in nemo-01.cap... written hash to nemo.hc22000\",\n      });\n      setStep(7);\n      setIsLoading(false);\n    }, 1000); // Simulate a short delay\n  };\n  \n  const handleConnect = async () => {\n    setIsLoading(true);\n    setConnectionStatus(\"pending\");\n    setTimeout(() => {\n      if (connectionPassword === correctPassword) {\n        setConnectionStatus(\"success\");\n      } else {\n        setConnectionStatus(\"failed\");\n      }\n      setIsLoading(false);\n    }, 1500);\n  };\n  \n  const handleConnectionCommandSubmit = (command: string) => {\n    const expectedCommand = `nmcli device wifi connect nemo password ${connectionPassword}`;\n    if (command.trim() === expectedCommand.trim()) {\n      handleConnect();\n      setCurrentCommand(\"\");\n    } else {\n      toast({\n        variant: \"destructive\",\n        title: \"أمر خاطئ\",\n        description: \"الأمر اللي كتبته مش مطابق للأمر المطلوب بالباسورد الحالي. حاول تاني.\",\n      });\n    }\n  };\n\n\n  return (\n    <div className=\"flex min-h-screen w-full flex-col\">\n      <AppHeader />\n      <main className=\"container mx-auto flex-1 px-4 py-6 md:px-6 md:py-12\">\n        {!isRegistered ? (\n          <RegistrationForm onRegister={() => setIsRegistered(true)} />\n        ) : (\n          <div className=\"mx-auto max-w-4xl space-y-6 md:space-y-8\">\n            <StepCard\n              stepNumber={1}\n              title=\"التحقق من كارت الواي فاي وحالته\"\n              command=\"iwconfig\"\n              status={getStatus(1)}\n              Icon={Wifi}\n              onCommandSubmit={(cmd) => handleCommandSubmit(cmd, \"iwconfig\", 2)}\n            >\n              <p className=\"mb-4 text-sm text-muted-foreground\">\n                ده أول أمر بنستخدمه عشان نتأكد إن كارت الواي فاي بتاعنا موجود والنظام شايفه. الأمر ده بيعرض لنا كل كروت الشبكة اللي على الجهاز، وإحنا بندور على الكارت اللي بيدعم الواي فاي (عادة بيكون اسمه wlan0).\n              </p>\n              <TerminalOutput>\n                {`lo        no wireless extensions.\n\neth0      no wireless extensions.\n\nwlan0     IEEE 802.11  ESSID:off/any\n          Mode:Managed  Access Point: Not-Associated\n          Tx-Power=20 dBm`}\n              </TerminalOutput>\n            </StepCard>\n\n            <StepCard\n              stepNumber={2}\n              title=\"تفعيل وضع المراقبة (Monitor Mode)\"\n              command=\"sudo airmon-ng start wlan0\"\n              status={getStatus(2)}\n              Icon={Monitor}\n              onCommandSubmit={(cmd) => handleCommandSubmit(cmd, \"sudo airmon-ng start wlan0\", 3)}\n            >\n              <p className=\"mb-4 text-sm text-muted-foreground\">\n                هنا بنحول كارت الواي فاي من الوضع العادي لوضع المراقبة. الوضع ده بيخلي الكارت يقدر \"يسمع\" كل باكيتات الواي فاي اللي في الهوا حواليه، مش بس اللي جاية لجهازك. ده أساسي عشان نقدر نلقط الـ Handshake بعد كده.\n              </p>\n              <TerminalOutput>\n                {`Found 3 processes that could cause trouble.\nKill them using 'airmon-ng check kill'.\n\nPHY  Interface  Driver    Chipset\nphy0 wlan0      rtl8812au Realtek Semiconductor Corp. RTL8812AU\n\n        (mac80211 monitor mode vif enabled for [phy0]wlan0 on [phy0]wlan0mon)`}\n              </TerminalOutput>\n            </StepCard>\n\n            <StepCard\n              stepNumber={3}\n              title=\"التأكد من تفعيل وضع المراقبة\"\n              command=\"iwconfig\"\n              status={getStatus(3)}\n              Icon={Scan}\n              onCommandSubmit={(cmd) => handleCommandSubmit(cmd, \"iwconfig\", 4)}\n            >\n               <p className=\"mb-4 text-sm text-muted-foreground\">\n                بنستخدم نفس الأمر الأولاني تاني عشان نتأكد إن وضع المراقبة اشتغل. المفروض هنلاقي كارت جديد ظهر (عادة اسمه wlan0mon) والـ Mode بتاعه بقى Monitor.\n              </p>\n              <TerminalOutput>\n                {`...\n\nwlan0mon  IEEE 802.11  Mode:Monitor  Frequency:2.457 GHz\n          Tx-Power=20 dBm`}\n              </TerminalOutput>\n            </StepCard>\n\n            <StepCard\n              stepNumber={4}\n              title=\" البحث عن شبكات الواي فاي\"\n              command=\"sudo airodump-ng wlan0mon\"\n              status={getStatus(4)}\n              Icon={Scan}\n              onCommandSubmit={(cmd) => {\n                if (cmd.trim() !== 'sudo airodump-ng wlan0mon') {\n                   toast({\n                    variant: \"destructive\",\n                    title: \"أمر خاطئ\",\n                    description: \"الأمر اللي كتبته مش صح، حاول تاني.\",\n                  });\n                  return;\n                }\n                if (targetNetwork) {\n                  setStep(5);\n                  setCurrentCommand(\"\");\n                } else {\n                  toast({\n                    variant: \"destructive\",\n                    title: \"اختار شبكة\",\n                    description: \"لازم تختار شبكة 'nemo' الأول.\",\n                  });\n                }\n              }}\n            >\n              <p className=\"mb-4 text-sm text-muted-foreground\">\n                الأمر ده بيبدأ يعمل مسح لكل شبكات الواي فاي اللي حوالينا ويعرض تفاصيلها زي اسمها (ESSID) وقوة الإشارة (PWR) ونوع التشفير (ENC). هدفنا نلاقي الشبكة اللي عايزين نستهدفها، وفي حالتنا دي هي شبكة \"nemo\". اختارها عشان نكمل.\n              </p>\n              <div className=\"rounded-md border\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead className=\"p-2 md:p-4\">BSSID</TableHead>\n                      <TableHead className=\"p-2 md:p-4\">PWR</TableHead>\n                      <TableHead className=\"hidden sm:table-cell p-2 md:p-4\">CH</TableHead>\n                      <TableHead className=\"hidden sm:table-cell p-2 md:p-4\">ENC</TableHead>\n                      <TableHead className=\"p-2 md:p-4\">ESSID</TableHead>\n                      <TableHead className=\"p-2 md:p-4\"></TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {initialNetworks.map((net) => (\n                      <TableRow\n                        key={net.bssid}\n                        className={cn(\n                          \"cursor-pointer\",\n                          targetNetwork?.bssid === net.bssid\n                            ? \"bg-primary/10\"\n                            : \"\"\n                        )}\n                        onClick={() => setTargetNetwork(net)}\n                      >\n                        <TableCell className=\"font-code p-2 md:p-4 text-xs md:text-sm\">{net.bssid}</TableCell>\n                        <TableCell className=\"p-2 md:p-4\">{net.pwr}</TableCell>\n                        <TableCell className=\"hidden sm:table-cell p-2 md:p-4\">{net.ch}</TableCell>\n                        <TableCell className=\"hidden sm:table-cell p-2 md:p-4\">{net.enc}</TableCell>\n                        <TableCell className=\"p-2 md:p-4\">{net.essid}</TableCell>\n                        <TableCell className=\"p-2 md:p-4\">\n                          <Button\n                            size=\"sm\"\n                            variant={\n                              targetNetwork?.bssid === net.bssid\n                                ? \"default\"\n                                : \"outline\"\n                            }\n                            onClick={() => setTargetNetwork(net)}\n                             disabled={net.essid !== \"nemo\"}\n                          >\n                            {net.essid === 'nemo' ? 'اختار' : 'غير متاح'}\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </StepCard>\n\n            <StepCard\n              stepNumber={5}\n              title=\"التقاط الـ WPA Handshake\"\n              command={`sudo airodump-ng --bssid ${\n                targetNetwork?.bssid ?? \"FE:B5:D5:59:1E:5F\"\n              } -c ${targetNetwork?.ch ?? 1} --write nemo wlan0mon`}\n              status={getStatus(5)}\n              Icon={Hand}\n               onCommandSubmit={(cmd) => {\n                const expectedCommand = `sudo airodump-ng --bssid ${targetNetwork?.bssid} -c ${targetNetwork?.ch} --write nemo wlan0mon`;\n                if (cmd.trim() === expectedCommand.trim()) {\n                  setIsHandshakeCaptured(true);\n                  setStep(6);\n                  setCurrentCommand(\"\");\n                } else {\n                  toast({\n                    variant: \"destructive\",\n                    title: \"أمر خاطئ\",\n                    description: \"الأمر اللي كتبته مش صح، أو ممكن تكون لسه مختارتش الشبكة. حاول تاني.\",\n                  });\n                }\n              }}\n            >\n               <p className=\"mb-4 text-sm text-muted-foreground\">\n                دي أهم خطوة. بنركز المراقبة بتاعتنا على شبكة \"nemo\" بس وبنستنى أي جهاز يحاول يتصل بيها. لما ده بيحصل، بنلقط عملية \"المصافحة\" (Handshake) اللي بتحصل بينهم واللي بتحتوي على نسخة مشفرة من الباسورد. بعد ما تلقطها، هتلاقي رسالة تأكيد ظهرت.\n              </p>\n              <TerminalOutput>\n                {`CH 1 ][ Elapsed: 45 s ][ 2025-10-28 16:59 ][ WPA handshake: ${\n                  targetNetwork?.bssid ?? \"...\"\n                }\n\nBSSID              PWR RXQ  Beacons    #Data    #/s  CH  MB   ENC  CIPHER  AUTH  ESSID\n${targetNetwork?.bssid ?? \"FE:B5:D5:59:1E:5F\"}  ${\n                  targetNetwork?.pwr ?? \"-55\"\n                } 100  31         0        0    1   180  WPA2 CCMP   PSK   ${\n                  targetNetwork?.essid ?? \"nemo\"\n                }\n\nSTATION            BSSID              Pkt  Probes\nCC:11:DD:22:EE:33  ${\n                  targetNetwork?.bssid ?? \"FE:B5:D5:59:1E:5F\"\n                } 10   (Not associated)`}\n              </TerminalOutput>\n              {getStatus(5) === 'completed' && (\n                <p className=\"mt-4 font-bold text-green-400\">\n                  ✅ تم التقاط الـ WPA handshake بنجاح!\n                </p>\n              )}\n            </StepCard>\n\n            <StepCard\n              stepNumber={6}\n              title=\"تحويل صيغة الـ Handshake\"\n              command=\"hcxpcapngtool -o nemo.hc22000 nemo-01.cap\"\n              status={getStatus(6)}\n              Icon={Binary}\n              onCommandSubmit={(cmd) => {\n                if (cmd.trim() === 'hcxpcapngtool -o nemo.hc22000 nemo-01.cap') {\n                  handleRunConversion();\n                  setCurrentCommand(\"\");\n                } else {\n                   toast({\n                    variant: \"destructive\",\n                    title: \"أمر خاطئ\",\n                    description: \"الأمر اللي كتبته مش صح، حاول تاني.\",\n                  });\n                }\n              }}\n              isButtonLoading={isLoading && step === 6}\n            >\n               <p className=\"mb-4 text-sm text-muted-foreground\">\n                الملف اللي لقطناه (cap.) مش جاهز لبرنامج كسر الباسوردات. لازم الأول نحوله لصيغة مخصوصة (HC22000) باستخدام أداة مساعدة عشان نقدر نستخدمه في الخطوات الجاية.\n              </p>\n              {handshakeConversionResult ? (\n                <TerminalOutput>\n                  {`${handshakeConversionResult.conversionDetails}\n\n${handshakeConversionResult.hashcatFormat}`}\n                </TerminalOutput>\n              ) : (\n                 <p className=\"text-sm text-muted-foreground\">\n                  في انتظار تنفيذ الأمر لتحويل الملف...\n                </p>\n              )}\n            </StepCard>\n\n            <StepCard\n              stepNumber={7}\n              title=\"محاولة الاتصال بالشبكة\"\n              command={`nmcli device wifi connect nemo password ${connectionPassword}`}\n              status={getStatus(7)}\n              Icon={KeyRound}\n              onCommandSubmit={handleConnectionCommandSubmit}\n              isButtonLoading={isLoading && step === 7}\n            >\n              <p className=\"mb-4 text-sm text-muted-foreground\">\n                الخطوة الأخيرة! دلوقتي هنستخدم الباسورد اللي عرفناه عشان نحاول نتصل بشبكة \"nemo\". اكتب الباسورد الصحيح في الخانة تحت عشان تكمل الأمر وتتصل.\n              </p>\n              <div className=\"my-4 flex flex-col sm:flex-row items-stretch sm:items-center gap-2\">\n                <p className=\"font-code text-sm text-muted-foreground shrink-0 mb-2 sm:mb-0\">الباسورد:</p>\n                <Input\n                  value={connectionPassword}\n                  onChange={(e) => setConnectionPassword(e.target.value)}\n                  placeholder=\"اكتب الباسورد هنا\"\n                  className=\"font-code flex-1\"\n                  disabled={isLoading}\n                />\n              </div>\n\n              {connectionStatus !== \"pending\" && (\n                <div className=\"mt-4\">\n                  <h4 className=\"font-headline text-lg\">نتيجة الاتصال:</h4>\n                  <TerminalOutput>\n                    {connectionStatus === \"success\" ? (\n                      <span className=\"text-green-400\">\n                        Device 'wlan0' successfully activated with '...'\n                      </span>\n                    ) : (\n                      <span className=\"text-red-400\">\n                        Error: Connection activation failed: (7) Secrets were required, but not provided.\n                      </span>\n                    )}\n                  </TerminalOutput>\n                  {connectionStatus === \"success\" && (\n                     <div className=\"mt-4 flex items-center gap-4 rounded-lg border border-green-500/50 bg-green-500/10 p-4\">\n                        <Signal className=\"h-8 w-8 text-green-400\" />\n                        <div>\n                           <p className=\"text-sm text-green-300\">تم الاتصال بنجاح!</p>\n                           <p className=\"font-bold text-white\">أنت الآن متصل بشبكة \"nemo\".</p>\n                        </div>\n                     </div>\n                  )}\n                   {connectionStatus === \"failed\" && (\n                     <div className=\"mt-4 flex items-center gap-4 rounded-lg border border-red-500/50 bg-red-500/10 p-4\">\n                        <XCircle className=\"h-8 w-8 text-red-400\" />\n                        <div>\n                           <p className=\"text-sm text-red-300\">فشل الاتصال</p>\n                           <p className=\"text-white\">كلمة المرور اللي دخلتها غلط. حاول تاني.</p>\n                        </div>\n                     </div>\n                  )}\n                </div>\n              )}\n            </StepCard>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}}]
}